Lab4: Traps - RISC-V assembly

Which registers contain arguments to functions? For example, which register holds 13 in main's call to printf? 

	f    : a0
	g    : a0
	main : a0, a1, a2

------------------------------------------------------------------------------------------------------
Where is the call to function f in the assembly code for main? Where is the call to g? (Hint: the compiler may inline functions) 

	There is no call to function to f or g.

------------------------------------------------------------------------------------------------------
At what address is the function printf located?

	In line 630

------------------------------------------------------------------------------------------------------
What value is in the register ra just after the jalr to printf in main? 

	ra = 0x38 (pc + 4)

------------------------------------------------------------------------------------------------------
Run the following code.

    unsigned int i = 0x00646c72;
    printf("H%x Wo%s", 57616, &i);
      
What is the output?

	He110 World

------------------------------------------------------------------------------------------------------
The output depends on that fact that the RISC-V is little-endian. If the RISC-V were instead big-endian what would you set i to in order to yield the same output? Would you need to change 57616 to a different value?

	By looks at the ASCII table, we know that 0x72 -> r, 0x6c -> l, 0x64 -> d
	If RISC-V were big endian, we would need to change i to 0x00726c64 (changing the byte order)

------------------------------------------------------------------------------------------------------
In the following code, what is going to be printed after 'y='? (note: the answer is not a specific value.) Why does this happen?

    printf("x=%d y=%d", 3);

	x=3 y=93906104
	
	The variable y belongs to another register with the value 93906104

------------------------------------------------------------------------------------------------------
